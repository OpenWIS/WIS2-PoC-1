<?xml version="1.0" encoding="UTF-8"?>
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>openwis.pilot.rdsh</groupId>
    <artifactId>rdsh</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>rdsh-ui</artifactId>
  <modelVersion>4.0.0</modelVersion>

  <packaging>bundle</packaging>

  <properties>
    <skip.npm.deps>false</skip.npm.deps>
    <ui.base.href>http://localhost:8182/rdsh</ui.base.href>
  </properties>

  <build>
    <plugins>
      <!-- Plugin to execute command  "npm install" and "npm run build" inside /angular directory -->
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>1.6</version>
        <configuration>
          <workingDirectory>angular</workingDirectory>
          <installDirectory>temp</installDirectory>
        </configuration>
        <executions>

          <!-- It will install nodejs and npm -->
          <execution>
            <id>install node and npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <nodeVersion>v8.9.4</nodeVersion>
              <npmVersion>5.6.0</npmVersion>
              <skip>${skip.npm.deps}</skip>
            </configuration>
          </execution>

          <!-- It will execute command install @angular/cli -->
					<execution>
						<id>npm install angular/cli</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install --save @angular/cli</arguments>
							<skip>${skip.npm.deps}</skip>
						</configuration>
					</execution>
					
					<!-- It will execute command install @angular-devkit/core -->
					<execution>
						<id>npm install angular-devkit/core</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install --save @angular-devkit/core</arguments>
							<skip>${skip.npm.deps}</skip>
						</configuration>
					</execution>

          <!-- It will execute command install compiler-cli -->
          <execution>
            <id>npm install compiler-cli</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>install --save @angular/compiler-cli</arguments>
              <skip>${skip.npm.deps}</skip>
            </configuration>
          </execution>

          <!-- It will execute command install cdk -->
          <execution>
            <id>npm install cdk</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>install --save @angular/cdk</arguments>
              <skip>${skip.npm.deps}</skip>
            </configuration>
          </execution>

          <!-- It will execute command install material -->
          <execution>
            <id>npm install material</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>install --save @angular/material</arguments>
              <skip>${skip.npm.deps}</skip>
            </configuration>
          </execution>

          <!-- It will execute command install animations -->
          <execution>
            <id>npm install animations</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>install --save @angular/animations</arguments>
              <skip>${skip.npm.deps}</skip>
            </configuration>
          </execution>

          <!-- It will execute command install hammerjs -->
          <execution>
            <id>npm install hammerjs</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>install --save hammerjs</arguments>
              <skip>${skip.npm.deps}</skip>
            </configuration>
          </execution>

          	<!-- It will execute command install @auth0/angular-jwt -->
					<execution>
						<id>npm install @auth0/angular-jwt</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install --save --save-exact @auth0/angular-jwt@1.0.0-beta.9</arguments>
							<skip>${skip.npm.deps}</skip>
						</configuration>
					</execution>

          <!-- It will execute install ng-trim-value-accessor -->
					<execution>
						<id>npm install ng-trim-value-accessor</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install --save ng-trim-value-accessor</arguments>
							<skip>${skip.npm.deps}</skip>
						</configuration>
					</execution>

          <!-- It will execute command "npm install" inside "/angular" directory -->
          <execution>
            <id>npm install</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>install</arguments>
              <skip>${skip.npm.deps}</skip>
            </configuration>
          </execution>

          <!-- It will execute command "npm build" inside "/angular" directory to clean and create "/dist" directory-->
          <execution>
            <id>npm build</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>--prefix ${project.build.directory}/${project.artifactId}-${project.version}/filtered run prod-build</arguments>
							<!-- <arguments>run dev-build</arguments> -->
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Plugin to copy the content of /angular/dist/ directory to output directory (ie/ /target/transactionManager-1.0/) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.4.2</version>
        <executions>
        <execution>
						<id>filter-resources</id>
						<phase>initialize</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}/filtered</outputDirectory>
							<resources>
								<resource>
									<filtering>true</filtering>
									<directory>${project.basedir}/angular</directory>
									<includes>
										<include>package.json</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
          <execution>
            <id>default-copy-resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <overwrite>true</overwrite>
              <outputDirectory>
                ${project.build.directory}/${project.artifactId}-${project.version}/
              </outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/angular/dist</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>3.4.0</version>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Web-ContextPath>/rdsh</Web-ContextPath>
            <_wab>${project.build.directory}/${project.artifactId}-${project.version}</_wab>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>